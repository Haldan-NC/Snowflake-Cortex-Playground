CREATE DATABASE IF NOT EXISTS WASHING_MACHINE_MANUALS;
CREATE SCHEMA IF NOT EXISTS PUBLIC;


-- Creating the stage
create or replace stag  e docs ENCRYPTION = (TYPE = 'SNOWFLAKE_SSE') DIRECTORY = ( ENABLE = true );


-- Uploading the documents using the drag and drop GUI function (DO THIS MANUALLY)
-- Check that the docs are uploaded 
ls @docs;


-- Creating the text chunker
create or replace function text_chunker(pdf_text string)
returns table (chunk varchar)
language python
runtime_version = '3.9'
handler = 'text_chunker'
packages = ('snowflake-snowpark-python', 'langchain')
as
$$
from snowflake.snowpark.types import StringType, StructField, StructType
from langchain.text_splitter import RecursiveCharacterTextSplitter
import pandas as pd

class text_chunker:

    def process(self, pdf_text: str):
        
        text_splitter = RecursiveCharacterTextSplitter(
            chunk_size = 1024, #Adjust this as you see fit
            chunk_overlap  = 256, #This let's text have some form of overlap. Useful for keeping chunks contextual
            length_function = len
        )
    
        chunks = text_splitter.split_text(pdf_text)
        df = pd.DataFrame(chunks, columns=['chunks'])
        
        yield from df.itertuples(index=False, name=None)
$$;


-- Create a table with chunks and pdf info
create or replace TABLE DOCS_CHUNKS_TABLE ( 
    RELATIVE_PATH VARCHAR(16777216), -- Relative path to the PDF file
    SIZE NUMBER(38,0), -- Size of the PDF
    file_url VARCHAR(16777216), -- Title of the PDF
    scoped_file_url VARCHAR(16777216), -- Version of PDF
    CHUNK VARCHAR(16777216) -- Piece of text
);

SELECT * 
FROM DOCS_CHUNKS_TABLE;



-- Populating the Table
insert into docs_chunks_table (relative_path, size, file_url,
                            scoped_file_url, chunk)

    select relative_path, 
            size,
            file_url, 
            build_scoped_file_url(@docs, relative_path) as scoped_file_url,
            func.chunk as chunk
    from 
        directory(@docs),
        TABLE(text_chunker (TO_VARCHAR(SNOWFLAKE.CORTEX.PARSE_DOCUMENT(@docs, 
                              relative_path, {'mode': 'LAYOUT'})))) as func;

                              
-- Create sentence embeddings of the chunks 
ALTER TABLE docs_chunks_table
ADD COLUMN embedding VECTOR(FLOAT, 768);

UPDATE docs_chunks_table
SET embedding = SNOWFLAKE.CORTEX.EMBED_TEXT_768('snowflake-arctic-embed-m-v1.5',chunk);

SELECT * 
FROM docs_chunks_table;


    
